define(["require","flight/lib/component"],function(t){function s(){this.defaultAttrs({canvasId:void 0,canvas:void 0,brushes:{},prop:{fillColor:"#000000",strokeColor:"#000000",width:10}}),this.after("initialize",function(){this.attachEventListeners()}),this.attachEventListeners=function(){this.on("canvas-ready",function(t,s){this.setCanvas(s.id,s.canvas)}.bind(this)),this.on("change-brushProperty",function(t,s){var i=Object.keys(s)[0],r=s[i];this.updateBrushProperty(i,r)}.bind(this)),this.on("request-brushProperties",function(){this.publishBrushProperties()}.bind(this)),this.on("request-brush",function(t,s){this.requestBrush(s.id)}.bind(this))},this.setCanvas=function(t,s){this.attr.canvas=s,this.attr.canvasId=t},this.publishBrushProperties=function(){this.trigger("brushProperties-served",{properties:this.attr.prop})},this.updateBrushProperty=function(t,s){if(t){var i=this.attr.prop[t];this.attr.prop[t]=s,this.trigger("brushProperty-updated",{key:t,oldValue:i,newValue:this.attr.prop[t]})}},this.setBrushProperties=function(t){Object.keys(this.attr.prop||{}).forEach(function(s){t.set(s,this.attr.prop[s])},this)},this.requestBrush=function(s){if(this.attr.brushes.hasOwnProperty(s)){var i=this.attr.brushes[s];this.setBrushProperties(i),this.publishRequestedBrush(i)}else t(["brushes/"+s],function(t){var i=new t(this.attr.canvas,this.attr.prop);this.attr.brushes[s]=i,this.publishRequestedBrush(i)}.bind(this))},this.publishRequestedBrush=function(t){this.trigger("brush-served",{brush:t})}}var i=t("flight/lib/component");return i(s)});