define(["require","flight/lib/component"],function(t){function e(){this.defaultAttrs({canvasId:void 0,canvas:void 0,brushes:{},prop:{fillColor:"#000000",strokeColor:"#000000",width:10}}),this.after("initialize",function(){this.attachEventListeners(),this.requestCanvas()}),this.attachEventListeners=function(){this.on("canvas-served",function(t,e){this.setCanvas(e.id,e.canvas)}.bind(this)),this.on("brushProperty-changed",function(t,e){var i=Object.keys(e)[0],n=e[i];this.updateBrushProperty(i,n)}.bind(this)),this.on("request-brushProperties",function(){this.publishBrushProperties()}),this.on("request-brush",function(t,e){this.requestBrush(e.id)})},this.requestCanvas=function(){this.trigger("request-canvas")},this.setCanvas=function(t,e){this.attr.canvas=e,this.attr.canvasId=t},this.publishBrushProperties=function(){this.trigger("brushProperties-served",{properties:this.attr.prop})},this.updateBrushProperty=function(t,e){if(t){var i=this.attr.prop[t];this.attr.prop[t]=e,this.trigger("brushProperty-updated",{key:t,oldValue:i,newValue:this.attr.prop[t]})}},this.setBrushProperties=function(t){Object.keys(this.attr.prop||{}).forEach(function(e){t.set(e,this.attr.prop[e])},this)},this.requestBrush=function(e){if(this.attr.brushes.hasOwnProperty(e)){var i=this.attr.brushes[e];this.setBrushProperties(i),this.publishRequestedBrush(i)}else t(["brushes/"+e],function(t){var i=new t(this.attr.canvas,this.attr.prop);this.attr.brushes[e]=i,this.publishRequestedBrush(i)}.bind(this))},this.publishRequestedBrush=function(t){this.trigger("brush-served",{brush:t})}}var i=t("flight/lib/component");return i(e)});