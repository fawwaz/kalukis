define(["require","./asOutlineShape"],function(t){function e(t,e){this.initialize(t,e)}var i=t("./asOutlineShape");return e.prototype.getSlope=function(t,e){return(e.y-t.y)/(e.x-t.x)},e.prototype.getLineEquation=function(t,e){var i=this.getSlope(t,e);return function(e){return t.y+i*(e-t.x)}},e.prototype.getOutlinePoints=function(t){if(0>t)return this.outline;for(var e=[],i=Math.abs(this.outline.x1-this.outline.x2),n=this.getLineEquation({x:this.outline.x1,y:this.outline.y1},{x:this.outline.x2,y:this.outline.y2}),r=this.outline.x1>this.outline.x2?-1:1,s=r*t,o=0,a=this.outline.x1;i>=o;o+=t,a+=s)e.push({x:a,y:n(a)});return e},e.prototype.onMouseDown=function(t){var e=this.canvas.getPointer(t.e);return this.outline={x1:e.x,y1:e.y,x2:e.x+1,y2:e.y+1},this.isDrawing=!0,this},e.prototype.onMouseMove=function(t){if(this.isDrawing){var e=this.canvas.getPointer(t.e);this.outline.x2=e.x,this.outline.y2=e.y,this.renderOutline()}return this},e.prototype.renderOutline=function(){var t=this.canvas.contextTop;return this.canvas.clearContext(t),t.save(),t.lineWidth=1,t.strokeStyle=this.cfg.strokeColor,t.beginPath(),t.moveTo(this.outline.x1,this.outline.y1),t.lineTo(this.outline.x2,this.outline.y2),t.stroke(),t.restore(),this},i.call(e.prototype),e});