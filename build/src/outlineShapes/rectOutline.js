define(["require","./asOutlineShape"],function(t){function i(t,i,e,n){for(var o=t.x,h=t.y,s=[],u=o+n;i>u;u+=n)s.push({x:u,y:h});for(u=h;e>u;u+=n)s.push({x:o,y:u});for(u=o;i>u;u+=n)s.push({x:u,y:e});for(u=e;u>h;u-=n)s.push({x:i,y:u});return s}function e(t,i){this.initialize(t,i)}var n=t("./asOutlineShape");return e.prototype.getOutlinePoints=function(t){var e=this.outline.x+this.outline.width,n=this.outline.y+this.outline.height,o=this.outline.x,h=this.outline.y,s=i({x:o,y:h},e,n,t);return s[0].type="Rect",s[0].outline=this.outline,s},e.prototype.onMouseDown=function(t){this.canvas.selection=!1;var i=this.canvas.getPointer(t.e);return this.outline={x:i.x,y:i.y,width:1,height:1},this.isDrawing=!0,this.startPoint=this.outerPoint=i,this},e.prototype.onMouseMove=function(t){if(this.isDrawing){var i=this.canvas.getPointer(t.e);this.updateOutline(i)}return this},e.prototype.updateOutline=function(t){return this.outline.height=t.y-this.outline.y,this.outline.width=t.x-this.outline.x,this.outerPoint=t,this.renderOutline(),this},e.prototype.normalizeOutlinePosition=function(){this.outline.width<0&&(this.outline.x=this.outline.x+this.outline.width,this.outline.width*=-1),this.outline.height<0&&(this.outline.y=this.outline.y+this.outline.height,this.outline.height*=-1)},e.prototype.renderOutline=function(){var t=this.canvas.contextTop;return this.canvas.clearContext(t),t.save(),t.lineWidth=1,t.strokeStyle=this.cfg.strokeColor,t.strokeRect(this.outline.x,this.outline.y,this.outline.width,this.outline.height),t.restore(),this},n.call(e.prototype),e});