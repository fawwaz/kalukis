define(["require","./asOutlineShape"],function(t){function e(t,e){this.initialize(t,e)}var i=t("./asOutlineShape");return e.prototype.getOutlinePoints=function(t){if(0>t)return this.outline;for(var e=[],i=this.outline.x+this.outline.width,n=this.outline.y+this.outline.height,r=this.outline.x,s=this.outline.y,o=r+t;i>o;o+=t)e.push({x:o,y:s});for(o=s;n>o;o+=t)e.push({x:r,y:o});for(o=r;i>o;o+=t)e.push({x:o,y:n});for(o=n;o>=s;o-=t)e.push({x:i,y:o});return e},e.prototype.onMouseDown=function(t){this.canvas.selection=!1;var e=this.canvas.getPointer(t.e);return this.outline={x:e.x,y:e.y,width:1,height:1},this.isDrawing=!0,this.startPoint=this.outerPoint=e,this},e.prototype.onMouseMove=function(t){if(this.isDrawing){var e=this.canvas.getPointer(t.e);this.updateOutline(e)}return this},e.prototype.updateOutline=function(t){return this.outline.height=t.y-this.outline.y,this.outline.width=t.x-this.outline.x,this.outerPoint=t,this.renderOutline(),this},e.prototype.normalizeOutlinePosition=function(){this.outline.width<0&&(this.outline.x=this.outline.x+this.outline.width,this.outline.width*=-1),this.outline.height<0&&(this.outline.y=this.outline.y+this.outline.height,this.outline.height*=-1)},e.prototype.renderOutline=function(){var t=this.canvas.contextTop;return this.canvas.clearContext(t),t.save(),t.lineWidth=1,t.strokeStyle=this.cfg.strokeColor,t.strokeRect(this.outline.x,this.outline.y,this.outline.width,this.outline.height),t.restore(),this},i.call(e.prototype),e});